{"version":3,"sources":["_config/index.ts","_services/authService.js","_api/client.ts","_api/index.ts","_api/organizations.ts","_api/users.ts","_layouts/DashboardLayout/DashboardLayout.tsx","Dashboard/Dashboard.tsx","AppRouter.tsx","App.tsx","index.tsx","_api/_mocks/_data/usersToOrganizationsData.ts","_api/_mocks/_data/organizationsData.ts","_api/_mocks/_data/usersData.ts","_api/_mocks/usersMocks.ts","_api/_mocks/index.ts"],"names":["config","navigationType","useSampleData","api","useMocks","url","process","API_URL","authService","token","init","this","store","get","auth","set","unauth","remove","isAuthenticated","getToken","apiService","axios","create","baseURL","interceptors","request","use","headers","Authorization","error","Promise","reject","response","status","apiMocks","OrganizationsService","getOne","organizationId","apiClient","then","res","data","getList","params","organization","post","update","put","delete","usersService","getProfile","userId","user","require","instance","organizations","users","a","caches","keys","cachesNames","all","map","name","default","DashboardLayout","children","Dashboard","className","id","style","height","AppRouterComponent","RouteWithLayout","Component","component","Layout","layout","rest","render","props","AppRouter","exact","path","App","locale","navigator","language","ReactDOM","document","getElementById","list","role","usersToOrganizationsData","byUserId","_groupBy","byOrganizationId","plan","organizationsData","byId","_keyBy","firstName","lastName","username","email","avatarUrl","globalRole","userToOrganization","userOgranizations","relation","_get","createdAt","moment","subtract","format","usersData","current","apiUrl","userMocks","rex","ctx","json","req","limit","parseInt","offset","order","JSON","parse","usersAll","_","orderBy","result","slice","count","length","delay","message","body","start","setupWorker","usersMocks"],"mappings":"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","file":"static/js/main.fc64db45.chunk.js","sourcesContent":["interface Config {\n  navigationType: 'hash' | 'history'\n  useSampleData?: boolean\n  api: {\n    useMocks?: boolean\n    url: string\n  }\n}\n\nconst config: Config = {\n  navigationType: 'hash',\n  useSampleData: true,\n  api: {\n    useMocks: true,\n    url: process.env.API_URL || '/api',\n  },\n}\n\nexport default config\n","/**\n * For the demo purposes we'll be using this predefined JWT token as the token of the signed in user\n * https://jwt.io/#debugger-io?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.Db8fjZU7MkBZoJDjmjuvv2EeDgG9RSaZ1xKm__qHelw\n */\n\nimport store from 'store'\nimport config from '../_config'\n\nconst sampleToken =\n  'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.Db8fjZU7MkBZoJDjmjuvv2EeDgG9RSaZ1xKm__qHelw'\n\nconst authService = {\n  token: null,\n  init() {\n    if (config.api.useMocks) {\n      this.token = sampleToken\n    } else {\n      // Read the token from local storage\n      this.token = store.get('token') || null\n    }\n  },\n  auth(token) {\n    store.set('token', token)\n  },\n  unauth() {\n    store.remove('token')\n  },\n  isAuthenticated() {\n    return !!this.token\n  },\n  getToken() {\n    return this.token\n  },\n}\n\nexport default authService\n","import axios from 'axios'\nimport config from '../_config'\nimport authService from '../_services/authService'\n\nconst apiService = axios.create({\n  baseURL: config.api.url,\n})\n\n// Use the Token header for all requests\napiService.interceptors.request.use(\n  (config) => {\n    const token = authService.getToken()\n    config.headers.Authorization = `Bearer ${token}`\n\n    return config\n  },\n  (error) => {\n    return Promise.reject(error)\n  },\n)\n\n// Unauth the token if we get 401 unauth response from the server\napiService.interceptors.response.use(\n  (response) => {\n    return response\n  },\n  (error) => {\n    if (error.response.status === 401) {\n      authService.unauth()\n    }\n\n    return Promise.reject(error)\n  },\n)\n\nexport default apiService\n","import instance from './client'\nimport organizations from './organizations'\nimport users from './users'\nimport config from '_config'\n\nlet apiMocks: any\n\nif (config.api.useMocks || process.env.NODE_ENV === 'test') {\n  apiMocks = require('./_mocks/')\n}\n\nconst init = async () => {\n  if (apiMocks) {\n    // Remove all SW caches\n    const cachesNames = await caches.keys()\n\n    await Promise.all(cachesNames.map((name) => caches.delete(name)))\n\n    await apiMocks.default.init()\n  }\n\n  return instance\n}\n\nexport default { instance, organizations, users, init }\nexport { init, instance, organizations, users }\n","import { AxiosResponse } from 'axios'\nimport Organization, {\n  OrganizationSubmissionData,\n  OrganizationId,\n} from './_types/Organization'\nimport apiClient from './client'\n\nexport interface IOrganizationsService {\n  getOne(organizationId: OrganizationId): Promise<Organization>\n  getList(params: any): Promise<OrganizationsListResponse>\n  create(organization: OrganizationSubmissionData): Promise<Organization>\n  update(\n    organizationId: OrganizationId,\n    organization: OrganizationSubmissionData,\n  ): Promise<Organization>\n  remove(organizationId: OrganizationId): Promise<any>\n}\n\nexport interface OrganizationsListResponse {\n  organizations: Organization[]\n  count: number\n}\n\nconst OrganizationsService: IOrganizationsService = {\n  getOne(organizationId) {\n    return apiClient\n      .get(`/organizations/${organizationId}`)\n      .then((res: AxiosResponse<Organization>) => res.data)\n  },\n  getList(params: any) {\n    return apiClient\n      .get(`/organizations`, {\n        params,\n      })\n      .then((res: AxiosResponse<OrganizationsListResponse>) => res.data)\n  },\n  create(organization: OrganizationSubmissionData) {\n    return apiClient\n      .post(`/organizations`, organization)\n      .then((res: AxiosResponse<Organization>) => res.data)\n  },\n  update(organizationId, organization) {\n    return apiClient\n      .put(`/organizations/${organizationId}`, organization)\n      .then((res: AxiosResponse<Organization>) => res.data)\n  },\n  remove(organizationId) {\n    return apiClient\n      .delete(`/organizations/${organizationId}`)\n      .then((res: AxiosResponse<any>) => res.data)\n  },\n}\n\nexport default OrganizationsService\n","import { AxiosResponse } from 'axios'\nimport User, { UserSubmissionData, UserId } from './_types/User'\nimport apiClient from './client'\n\nexport interface UsersService {\n  getProfile(): Promise<User>\n  getOne(userId: UserId): Promise<User>\n  getList(params?: any): Promise<UsersListResponse>\n  create(user: UserSubmissionData): Promise<User>\n  update(userId: UserId, user: UserSubmissionData): Promise<User>\n  remove(userId: UserId): Promise<any>\n}\n\nexport interface UsersListResponse {\n  users: User[]\n  count: number\n}\n\nconst usersService: UsersService = {\n  getProfile() {\n    return apiClient.get('/users/profile').then((res: AxiosResponse<User>) => res.data)\n  },\n  getOne(userId) {\n    return apiClient.get(`/users/${userId}`).then((res: AxiosResponse<User>) => res.data)\n  },\n  getList(params: any) {\n    return apiClient\n      .get(`/users`, {\n        params,\n      })\n      .then((res: AxiosResponse<UsersListResponse>) => res.data)\n  },\n  create(user: UserSubmissionData) {\n    return apiClient.post(`/users`, user).then((res: AxiosResponse<User>) => res.data)\n  },\n  update(userId, user) {\n    return apiClient\n      .put(`/users/${userId}`, user)\n      .then((res: AxiosResponse<User>) => res.data)\n  },\n  remove(userId) {\n    return apiClient\n      .delete(`/users/${userId}`)\n      .then((res: AxiosResponse<any>) => res.data)\n  },\n}\n\nexport default usersService\n","import React from 'react'\n\nconst DashboardLayout: React.FC = ({ children }) => {\n  return <div>{children}</div>\n}\n\nexport default DashboardLayout\n","import React from 'react'\n\ntype DashboardProps = {}\n\nconst Dashboard: React.FC<DashboardProps> = () => {\n  return (\n    <div className=\"w-full h-full max-w-8xl mx-auto\">\n      <div className=\"lg:flex h-screen\">\n        {/* Sidebar */}\n        <div\n          id=\"AppSidebarContainer\"\n          className=\"\n            overflow-scroll\n            z-40 inset-0 flex-none h-screen bg-black bg-opacity-25 w-full\n            static top-0 hidden\n            lg:w-60 xl:w-72 lg:block\n          \"\n        >\n          <div className=\"h-16 bg-red-100 sticky top-0\">Logo</div>\n          <div id=\"AppSidebarNav\" className=\"bg-blue-200\" style={{ height: 300 }}>\n            Nav Menu\n          </div>\n        </div>\n        {/* Content */}\n        <div id=\"AppContentContainer\" className=\"w-full h-screen overflow-scroll\">\n          {/* Header */}\n          <div id=\"AppHeaderContainer\" className=\"w-full bg-gray-200 h-16 sticky top-0\">\n            Header\n          </div>\n          {/* Page */}\n          <div id=\"AppPageContainer\" className=\"bg-yellow-100\" style={{ height: 1500 }}>\n            Content\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Dashboard\n","import React from 'react'\nimport { HashRouter, BrowserRouter, Route, Switch, RouteProps } from 'react-router-dom' //\n\nimport config from './_config'\n\nimport DashboardLayout from '_layouts/DashboardLayout'\nimport { Dashboard } from './Dashboard'\n\n// Use different router type depending on configuration\nconst AppRouterComponent: React.FC = ({ children }) => {\n  return config.navigationType === 'history' ? (\n    <BrowserRouter>{children}</BrowserRouter>\n  ) : (\n    <HashRouter>{children}</HashRouter>\n  )\n}\n\nconst AppRouter: React.FC = () => {\n  return (\n    <AppRouterComponent>\n      <Switch>\n        {/* <Route path=\"/auth\" component={Auth} /> */}\n        <RouteWithLayout\n          exact\n          path={`/`}\n          component={Dashboard}\n          layout={DashboardLayout}\n        />\n      </Switch>\n    </AppRouterComponent>\n  )\n}\n\nexport interface RouteWithLayoutProps extends RouteProps {\n  layout: React.ComponentType<any>\n}\n\nconst RouteWithLayout: React.FC<RouteWithLayoutProps> = ({\n  component: Component,\n  layout: Layout,\n  children,\n  ...rest\n}) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (!Component) return null\n\n        if (Layout) {\n          return (\n            <Layout>\n              <Component {...props} />\n            </Layout>\n          )\n        } else {\n          return <Component {...props} />\n        }\n      }}\n    >\n      {children}\n    </Route>\n  )\n}\n\nexport default AppRouter\n","import React from 'react'\nimport { IntlProvider } from 'react-intl'\n\nimport AppRouter from './AppRouter'\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <AppRouter />\n    </div>\n  )\n}\nexport default () => (\n  <IntlProvider locale={navigator.language}>\n    <App />\n  </IntlProvider>\n)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport authService from './_services/authService'\nimport api from './_api/'\n\nimport App from './App'\n\n// Mount the app only when auth services and api services are ready\n// this solves api mocks issue\n;(async () => {\n  // Init the auth service\n  authService.init()\n\n  // Init rest API client\n  await api.init()\n\n  ReactDOM.render(<App />, document.getElementById('root'))\n})()\n","import _groupBy from 'lodash/groupBy'\nimport UserToOrganization from '../../_types/UserToOrganization'\n\n// import organizationsData from './organizationsData'\n// import usersData from './usersData'\n\nconst list: UserToOrganization[] = [\n  {\n    id: 1,\n    organizationId: 1,\n    userId: 1,\n    role: 'owner',\n    // organization: organizationsData.byId[1],\n    // user: usersData.byId[1],\n  },\n  {\n    id: 2,\n    organizationId: 1,\n    userId: 2,\n    role: 'admin',\n    // organization: organizationsData.byId[1],\n    // user: usersData.byId[2],\n  },\n  {\n    id: 3,\n    organizationId: 1,\n    userId: 2,\n    role: 'member',\n    // organization: organizationsData.byId[1],\n    // user: usersData.byId[2],\n  },\n  {\n    id: 4,\n    organizationId: 2,\n    userId: 2,\n    role: 'owner',\n    // organization: organizationsData.byId[2],\n    // user: usersData.byId[2],\n  },\n  {\n    id: 5,\n    organizationId: 3,\n    userId: 3,\n    role: 'owner',\n    // organization: organizationsData.byId[3],\n    // user: usersData.byId[3],\n  },\n  {\n    id: 6,\n    organizationId: 3,\n    userId: 2,\n    role: 'member',\n    // organization: organizationsData.byId[3],\n    // user: usersData.byId[2],\n  },\n]\n\nconst byUserId = _groupBy(list, 'userId')\nconst byOrganizationId = _groupBy(list, 'organizationId')\n\nconst usersToOrganizationsData = {\n  list,\n  byUserId,\n  byOrganizationId,\n}\n\nexport default usersToOrganizationsData\n","import _keyBy from 'lodash/keyBy'\nimport Organization from '../../_types/Organization'\n// import organizationsToUsersData from './organizationsToUsersData'\n\nconst list: Organization[] = [\n  {\n    id: 1,\n    name: 'ModularCode',\n    plan: {\n      id: 'silver',\n      name: 'Silver',\n    },\n  },\n  {\n    id: 2,\n    name: 'Cool LLC',\n    plan: {\n      id: 'gold',\n      name: 'Gold',\n    },\n    // organizationToUsers: organizationsToUsersData.byOrganizationId[2],\n  },\n  {\n    id: 3,\n    name: 'Other LLC',\n    plan: {\n      id: 'trial',\n      name: 'Trial',\n    },\n    // organizationToUsers: organizationsToUsersData.byOrganizationId[3],\n  },\n]\n\nconst byId: { [key: number]: Organization } = _keyBy(list, 'id')\n\nconst organizationsData = {\n  list,\n  byId,\n}\n\nexport default organizationsData\n","import { get as _get, keyBy as _keyBy } from 'lodash'\nimport moment from 'moment'\nimport User from '../../_types/User'\nimport UserToOrganization from '../../_types/UserToOrganization'\nimport usersToOrganizationsData from './usersToOrganizationsData'\nimport organizationsData from './organizationsData'\n\nconst list: User[] = [\n  {\n    id: 1,\n    firstName: 'Gevorg',\n    lastName: 'Harutyunyan',\n    username: 'modularcoder',\n    email: 'modularcoder@gmail.com',\n    avatarUrl: 'https://avatars3.githubusercontent.com/u/3959008?v=3&s=40',\n    globalRole: 'admin',\n    status: 'active',\n  },\n  {\n    id: 2,\n    firstName: 'Jay',\n    lastName: 'Nickolson',\n    username: null,\n    email: 'example@gmail.com',\n    avatarUrl:\n      'https://tinyfac.es/data/avatars/475605E3-69C5-4D2B-8727-61B7BB8C4699-500w.jpeg',\n    status: 'active',\n  },\n  {\n    id: 3,\n    firstName: 'Ana',\n    lastName: 'De Armas',\n    username: null,\n    email: 'Ana+De+Armas@example.com',\n    avatarUrl:\n      'https://images-na.ssl-images-amazon.com/images/M/MV5BMjA3NjYzMzE1MV5BMl5BanBnXkFtZTgwNTA4NDY4OTE@._V1_UX172_CR0,0,172,256_AL_.jpg',\n    status: 'active',\n  },\n  {\n    id: 4,\n    firstName: 'Armas',\n    lastName: 'De Ana',\n    username: null,\n    email: 'Ana+De+Armas@example.com',\n    avatarUrl:\n      'https://images-na.ssl-images-amazon.com/images/M/MV5BMTc0MzgxMzQ5N15BMl5BanBnXkFtZTgwMzMzNjkwOTE@._V1_UX172_CR0,0,172,256_AL_.jpg',\n    status: 'active',\n  },\n  {\n    id: 5,\n    firstName: 'Sonequa',\n    lastName: 'Martin-Green',\n    email: 'Sonequa+Martin+Green@example.com',\n    avatarUrl:\n      'https://images-na.ssl-images-amazon.com/images/M/MV5BMTgxMTc1MTYzM15BMl5BanBnXkFtZTgwNzI5NjMwOTE@._V1_UY256_CR16,0,172,256_AL_.jpg',\n    status: 'disabled',\n  },\n  {\n    id: 6,\n    firstName: 'Bessie',\n    lastName: 'Walker',\n    username: 'bwalk',\n    email: 'bessie.walker@example.com',\n    avatarUrl: 'https://randomuser.me/api/portraits/women/29.jpg',\n    globalRole: 'admin',\n    status: 'active',\n  },\n  {\n    id: 7,\n    firstName: 'Scarlett',\n    lastName: 'Sanders',\n    username: 'sanders',\n    email: 'scarlett.sanders@example.com',\n    avatarUrl: 'https://randomuser.me/api/portraits/women/26.jpg',\n    status: 'active',\n  },\n  {\n    id: 8,\n    firstName: 'Scott',\n    lastName: 'Jensen',\n    username: 'scjx',\n    email: 'scott.jensen@example.com',\n    avatarUrl: 'https://randomuser.me/api/portraits/men/87.jpg',\n    status: 'pending',\n  },\n  {\n    id: 9,\n    firstName: 'Marcus ',\n    lastName: 'Barrett',\n    username: null,\n    email: 'marcus.barrett@example.com',\n    avatarUrl: 'https://randomuser.me/api/portraits/men/88.jpg',\n    status: 'pending',\n  },\n  {\n    id: 10,\n    firstName: 'Penny',\n    lastName: 'Lawrence',\n    email: 'penny.lawrence@example.com',\n    avatarUrl: 'https://randomuser.me/api/portraits/women/79.jpg',\n    status: 'active',\n  },\n  {\n    id: 11,\n    firstName: 'Melvin',\n    lastName: 'Sutton',\n    username: 'johndoe1',\n    email: 'melvin.sutton@example.com',\n    avatarUrl: 'https://randomuser.me/api/portraits/men/85.jpg',\n    globalRole: 'admin',\n    status: 'disabled',\n  },\n  {\n    id: 12,\n    firstName: 'Della',\n    lastName: 'Case',\n    username: null,\n    email: 'della.case@example.com',\n    avatarUrl:\n      'https://images.unsplash.com/photo-1510227272981-87123e259b17?ixlib=rb-0.3.5&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=200&fit=max&s=3759e09a5b9fbe53088b23c615b6312e',\n    status: 'pending',\n  },\n  {\n    id: 13,\n    firstName: 'Fischer',\n    lastName: 'Garland',\n    username: 'fgfr',\n    email: 'Fischer+Garland@example.com',\n    avatarUrl:\n      'https://images.unsplash.com/photo-1456327102063-fb5054efe647?ixlib=rb-0.3.5&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=200&fit=max&s=f05c14dd4db49f08a789e6449604c490',\n    status: 'active',\n  },\n  {\n    id: 14,\n    firstName: 'Abdullah',\n    lastName: 'Hadley',\n    username: 'hadley',\n    email: 'Hadley+Abdullah@example.com',\n    avatarUrl:\n      'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-0.3.5&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=200&fit=max&s=a72ca28288878f8404a795f39642a46f',\n    status: 'active',\n  },\n  {\n    id: 15,\n    firstName: 'Lucy',\n    lastName: 'Walker',\n    email: 'Lucy+Walker@example.com',\n    avatarUrl: 'https://randomuser.me/api/portraits/women/0.jpg',\n    status: 'active',\n  },\n].map((user) => {\n  const userToOrganization = usersToOrganizationsData.byUserId[user.id] || []\n\n  return {\n    ...user,\n    userOgranizations: userToOrganization.map((relation: UserToOrganization) => {\n      return {\n        ...relation,\n        organization: _get(organizationsData.byId, relation.organizationId, {}),\n      }\n    }),\n    createdAt: moment().subtract(user.id, 'days').format(),\n  }\n})\n\nconst byId: { [key: number]: User } = _keyBy(list, 'id')\n\nconst usersData = {\n  list,\n  byId,\n  current: byId[1],\n}\n\nexport default usersData\n","import _ from 'lodash'\nimport { rest } from 'msw'\n\nimport config from '_config'\nimport usersData from './_data/usersData'\n\nconst apiUrl = config.api.url\n\nconst userMocks = [\n  rest.get(`${apiUrl}/users/profile`, (rex, res, ctx) => {\n    return res(ctx.json(usersData.current))\n  }),\n\n  rest.get(`${apiUrl}/users`, async (req, res, ctx) => {\n    let limit = parseInt(req.params.limit || '10')\n    let offset = parseInt(req.params.offset || '0')\n    let order = req.params.order ? JSON.parse(req.params.order || '{}') : null\n\n    const usersAll = order\n      ? _.orderBy(usersData.list, [order.orderBy], [order.order])\n      : usersData.list\n\n    const result = {\n      users: usersAll.slice(offset, offset + limit),\n      count: usersAll.length,\n    }\n\n    return res(\n      // Set custom status\n      ctx.status(200),\n      // Delay the response\n      ctx.delay(500),\n      // send JSON response body\n      ctx.json(result),\n    )\n  }),\n\n  rest.get(`${apiUrl}/users/:userId`, (req, res, ctx) => {\n    const { userId } = req.params\n    const user = usersData.byId[userId]\n\n    if (user) {\n      return res(ctx.status(200), ctx.delay(200), ctx.json(user))\n    } else {\n      return res(\n        ctx.status(404),\n        ctx.status(200),\n        ctx.json({\n          message: 'User not found',\n        }),\n      )\n    }\n  }),\n\n  rest.post(`${apiUrl}/users`, (req, res, ctx) => {\n    return res(\n      ctx.status(200),\n      ctx.delay(200),\n      ctx.json({\n        // @ts-ignore\n        ...req.body,\n      }),\n    )\n  }),\n\n  rest.put(`${apiUrl}/users/:userId`, (req, res, ctx) => {\n    const { userId } = req.params\n    const user = usersData.byId[userId]\n\n    if (user) {\n      return res(\n        ctx.status(200),\n        ctx.delay(200),\n        ctx.json({\n          ...user,\n          // ...req.body,\n        }),\n      )\n    } else {\n      return res(ctx.status(403), ctx.json({ message: 'Update not permitted' }))\n    }\n  }),\n\n  rest.delete(`${apiUrl}/users/:userId`, (req, res, ctx) => {\n    const { userId } = req.params\n    const user = usersData.byId[userId]\n\n    if (user) {\n      return res(\n        ctx.status(200),\n        ctx.delay(200),\n        ctx.json({\n          message: 'User removed',\n        }),\n      )\n    } else {\n      return res(ctx.status(403), ctx.json({ message: 'User not found or forbidden' }))\n    }\n  }),\n]\n\nexport default userMocks\n","import { setupWorker } from 'msw'\nimport { setupServer } from 'msw/node'\nimport usersMocks from './usersMocks'\n\nconst start =\n  process.env.NODE_ENV !== 'test'\n    ? setupWorker(...usersMocks).start\n    : setupServer(...usersMocks)\n\nexport default {\n  init: start,\n}\n"],"sourceRoot":""}